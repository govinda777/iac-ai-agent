version: '3.8'

services:
  whatsapp-agent:
    build:
      context: ..
      dockerfile: deployments/Dockerfile.whatsapp-agent
    container_name: whatsapp-agent
    ports:
      - "8080:8080"
    environment:
      - WHATSAPP_LOG_LEVEL=info
      - WHATSAPP_LOG_FILE=/var/log/whatsapp-agent.log
      - WALLET_ADDRESS=0x17eDfB8a794ec4f13190401EF7aF1c17f3cc90c5
      - WEBHOOK_URL=https://seu-dominio.com/webhook/whatsapp
      - VERIFY_TOKEN=seu_token_secreto_aqui
    volumes:
      - ./configs:/home/whatsapp/configs:ro
      - whatsapp-logs:/var/log
    depends_on:
      - postgres
      - redis
    networks:
      - whatsapp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "wget", "--no-verbose", "--tries=1", "--spider", "http://localhost:8080/webhook/whatsapp/health"]
      interval: 30s
      timeout: 10s
      retries: 3
      start_period: 40s

  postgres:
    image: postgres:15-alpine
    container_name: whatsapp-postgres
    environment:
      - POSTGRES_DB=whatsapp_agent
      - POSTGRES_USER=whatsapp_user
      - POSTGRES_PASSWORD=whatsapp_password
    volumes:
      - postgres-data:/var/lib/postgresql/data
      - ./scripts/init-db.sql:/docker-entrypoint-initdb.d/init-db.sql:ro
    ports:
      - "5432:5432"
    networks:
      - whatsapp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD-SHELL", "pg_isready -U whatsapp_user -d whatsapp_agent"]
      interval: 10s
      timeout: 5s
      retries: 5

  redis:
    image: redis:7-alpine
    container_name: whatsapp-redis
    command: redis-server --appendonly yes
    volumes:
      - redis-data:/data
    ports:
      - "6379:6379"
    networks:
      - whatsapp-network
    restart: unless-stopped
    healthcheck:
      test: ["CMD", "redis-cli", "ping"]
      interval: 10s
      timeout: 5s
      retries: 5

  nginx:
    image: nginx:alpine
    container_name: whatsapp-nginx
    ports:
      - "80:80"
      - "443:443"
    volumes:
      - ./nginx/nginx.conf:/etc/nginx/nginx.conf:ro
      - ./nginx/ssl:/etc/nginx/ssl:ro
    depends_on:
      - whatsapp-agent
    networks:
      - whatsapp-network
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: whatsapp-prometheus
    ports:
      - "9090:9090"
    volumes:
      - ./monitoring/prometheus.yml:/etc/prometheus/prometheus.yml:ro
      - prometheus-data:/prometheus
    command:
      - '--config.file=/etc/prometheus/prometheus.yml'
      - '--storage.tsdb.path=/prometheus'
      - '--web.console.libraries=/etc/prometheus/console_libraries'
      - '--web.console.templates=/etc/prometheus/consoles'
      - '--storage.tsdb.retention.time=200h'
      - '--web.enable-lifecycle'
    networks:
      - whatsapp-network
    restart: unless-stopped

  grafana:
    image: grafana/grafana:latest
    container_name: whatsapp-grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_PASSWORD=admin
    volumes:
      - grafana-data:/var/lib/grafana
      - ./monitoring/grafana/dashboards:/var/lib/grafana/dashboards:ro
      - ./monitoring/grafana/provisioning:/etc/grafana/provisioning:ro
    depends_on:
      - prometheus
    networks:
      - whatsapp-network
    restart: unless-stopped

volumes:
  postgres-data:
    driver: local
  redis-data:
    driver: local
  whatsapp-logs:
    driver: local
  prometheus-data:
    driver: local
  grafana-data:
    driver: local

networks:
  whatsapp-network:
    driver: bridge
    ipam:
      config:
        - subnet: 172.20.0.0/16
