# ============================================
# üöÄ IaC AI Agent - Dockerfile de Produ√ß√£o
# ============================================
# 
# Dockerfile otimizado para produ√ß√£o com:
# - Multi-stage build para reduzir tamanho
# - Imagem base minimalista
# - Seguran√ßa aprimorada
# - Health checks integrados
# - Cache otimizado

# Build stage
FROM golang:1.21-alpine AS builder

# Instalar depend√™ncias de build
RUN apk add --no-cache \
    git \
    make \
    ca-certificates \
    tzdata

# Configurar timezone
ENV TZ=UTC

WORKDIR /build

# Copiar arquivos de depend√™ncias primeiro (para cache)
COPY go.mod go.sum ./

# Download das depend√™ncias
RUN go mod download && go mod verify

# Copiar c√≥digo fonte
COPY . .

# Build otimizado para produ√ß√£o
RUN CGO_ENABLED=0 \
    GOOS=linux \
    GOARCH=amd64 \
    go build \
    -ldflags='-w -s -extldflags "-static"' \
    -a -installsuffix cgo \
    -o iac-ai-agent \
    ./cmd/agent

# Runtime stage - imagem minimalista
FROM alpine:3.18

# Instalar depend√™ncias de runtime
RUN apk add --no-cache \
    ca-certificates \
    curl \
    terraform \
    python3 \
    py3-pip \
    git \
    openssh-client \
    && rm -rf /var/cache/apk/*

# Instalar Checkov para an√°lise de seguran√ßa
RUN pip3 install --no-cache-dir checkov

# Criar usu√°rio n√£o-root para seguran√ßa
RUN addgroup -g 1000 appuser && \
    adduser -D -u 1000 -G appuser appuser

WORKDIR /app

# Copiar bin√°rio do stage de build
COPY --from=builder /build/iac-ai-agent .

# Copiar configura√ß√µes
COPY --from=builder /build/configs/ ./configs/

# Copiar scripts √∫teis
COPY --from=builder /build/scripts/ ./scripts/

# Criar diret√≥rios necess√°rios
RUN mkdir -p /app/logs /app/tmp /app/data && \
    chown -R appuser:appuser /app

# Configurar permiss√µes
USER appuser

# Expor porta
EXPOSE 8080

# Health check integrado
HEALTHCHECK --interval=30s \
    --timeout=10s \
    --start-period=30s \
    --retries=3 \
    CMD curl -f http://localhost:8080/health || exit 1

# Labels para metadados
LABEL maintainer="gosouza@example.com" \
      version="1.0.0" \
      description="IaC AI Agent - Production Image" \
      org.opencontainers.image.title="IaC AI Agent" \
      org.opencontainers.image.description="Intelligent Infrastructure as Code Analysis Agent" \
      org.opencontainers.image.version="1.0.0" \
      org.opencontainers.image.created="2024-01-01T00:00:00Z"

# Vari√°veis de ambiente padr√£o
ENV PORT=8080 \
    HOST=0.0.0.0 \
    LOG_LEVEL=info \
    LOG_FORMAT=json \
    ENABLE_STARTUP_VALIDATION=true

# Ponto de entrada
ENTRYPOINT ["./iac-ai-agent"]
