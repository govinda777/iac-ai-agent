# Configuração de Ambiente para Testes BDD
# Este arquivo define as variáveis de ambiente para executar testes com mocks e integração real

# =============================================================================
# MODO DE TESTE
# =============================================================================
# Opções: mock, integration, real
# - mock: Usa apenas mocks, sem integração com serviços externos
# - integration: Usa serviços reais para validação de integração
# - real: Testes end-to-end com serviços reais
export TEST_MODE=mock

# =============================================================================
# CONFIGURAÇÕES GERAIS
# =============================================================================
# Usar serviços reais mesmo em modo mock (para testes híbridos)
export TEST_USE_REAL_SERVICES=false

# Simular falhas nos mocks para testar tratamento de erros
export TEST_MOCK_FAILURES=false

# Executar testes de performance
export TEST_PERFORMANCE=false

# Número de requisições simultâneas para testes de carga
export TEST_LOAD_COUNT=10

# Timeout em segundos para operações de teste
export TEST_TIMEOUT_SECONDS=30

# =============================================================================
# CONFIGURAÇÕES PARA INTEGRAÇÃO REAL
# =============================================================================
# App ID do Privy para testes de integração
export TEST_REAL_PRIVY_APP_ID=cmgh6un8w007bl10ci0tgitwp

# URL da RPC da Base Network para testes
export TEST_REAL_BASE_RPC_URL=https://goerli.base.org

# Endereço do contrato NFT deployado
export TEST_REAL_CONTRACT_ADDR=0x147e832418Cc06A501047019E956714271098b89

# API Key do Nation.fun para testes de LLM
export TEST_REAL_NATION_API_KEY=your_nation_api_key_here

# =============================================================================
# CONFIGURAÇÕES PARA MOCKS
# =============================================================================
# ID do usuário mockado
export TEST_MOCK_USER_ID=mock_user_123

# Endereço da wallet mockada
export TEST_MOCK_WALLET_ADDRESS=0x742d35Cc6634C0532925a3b844Bc9e7595f0bEb

# ID do token NFT mockado
export TEST_MOCK_TOKEN_ID=mock_token_123

# ID da sessão de onramp mockada
export TEST_MOCK_SESSION_ID=mock_session_123

# =============================================================================
# CONFIGURAÇÕES DE LOG E DEBUG
# =============================================================================
# Nível de log para testes (debug, info, warn, error)
export TEST_LOG_LEVEL=info

# Formato de log (json, text)
export TEST_LOG_FORMAT=json

# Habilitar logs detalhados de debug
export TEST_DEBUG=false

# =============================================================================
# CONFIGURAÇÕES DE PERFORMANCE
# =============================================================================
# Tempo máximo para testes de performance (segundos)
export TEST_PERFORMANCE_TIMEOUT=60

# Número de workers para testes paralelos
export TEST_WORKERS=4

# Intervalo entre requisições em testes de carga (milissegundos)
export TEST_REQUEST_INTERVAL=100

# =============================================================================
# CONFIGURAÇÕES DE REDE
# =============================================================================
# Timeout para requisições HTTP (segundos)
export TEST_HTTP_TIMEOUT=30

# Número máximo de retries para requisições falhadas
export TEST_MAX_RETRIES=3

# Intervalo entre retries (segundos)
export TEST_RETRY_INTERVAL=1

# =============================================================================
# CONFIGURAÇÕES DE BANCO DE DADOS (se aplicável)
# =============================================================================
# URL do banco de dados para testes
export TEST_DATABASE_URL=postgres://test:test@localhost:5432/test_db

# Pool de conexões para testes
export TEST_DB_POOL_SIZE=10

# =============================================================================
# CONFIGURAÇÕES DE CACHE (se aplicável)
# =============================================================================
# URL do Redis para testes
export TEST_REDIS_URL=redis://localhost:6379/1

# TTL padrão para cache em testes (segundos)
export TEST_CACHE_TTL=300

# =============================================================================
# CONFIGURAÇÕES DE MONITORAMENTO
# =============================================================================
# Habilitar métricas durante testes
export TEST_ENABLE_METRICS=false

# URL do endpoint de métricas
export TEST_METRICS_ENDPOINT=http://localhost:9090/metrics

# =============================================================================
# EXEMPLOS DE USO
# =============================================================================

# Para executar testes apenas com mocks:
# export TEST_MODE=mock
# go test ./test/bdd/...

# Para executar testes de integração:
# export TEST_MODE=integration
# export TEST_REAL_NATION_API_KEY=your_real_api_key
# go test ./test/bdd/...

# Para executar testes de performance:
# export TEST_MODE=mock
# export TEST_PERFORMANCE=true
# export TEST_LOAD_COUNT=50
# go test ./test/bdd/...

# Para executar testes com falhas simuladas:
# export TEST_MODE=mock
# export TEST_MOCK_FAILURES=true
# go test ./test/bdd/...

# =============================================================================
# NOTAS IMPORTANTES
# =============================================================================
# 1. Sempre use dados de teste, nunca dados de produção
# 2. Configure TEST_REAL_NATION_API_KEY apenas para testes de integração
# 3. Use TEST_MOCK_FAILURES=true para testar tratamento de erros
# 4. Ajuste TEST_LOAD_COUNT baseado na capacidade do ambiente
# 5. Configure timeouts apropriados para evitar testes lentos
# 6. Use TEST_DEBUG=true apenas para debug local, nunca em CI/CD
