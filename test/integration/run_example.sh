#!/bin/bash

# Exemplo de execu√ß√£o dos testes de integra√ß√£o NFT Access
# Este script demonstra como executar os diferentes tipos de testes

echo "üéØ Exemplo de Execu√ß√£o - Testes de Integra√ß√£o NFT Access"
echo "========================================================"
echo ""

# Verificar se estamos no diret√≥rio correto
if [ ! -f "go.mod" ]; then
    echo "‚ùå Execute este script na raiz do projeto (onde est√° o go.mod)"
    exit 1
fi

echo "üìã Pr√©-requisitos:"
echo "1. Configure suas vari√°veis de ambiente no arquivo .env"
echo "2. Certifique-se de ter um NFT Nation Pass"
echo "3. Configure WALLET_ADDRESS com sua wallet"
echo "4. Configure NATION_NFT_CONTRACT com o endere√ßo do contrato"
echo ""

# Verificar se .env existe
if [ ! -f ".env" ]; then
    echo "‚ö†Ô∏è Arquivo .env n√£o encontrado"
    echo "Copiando env.example para .env..."
    cp env.example .env
    echo "üìù Configure suas vari√°veis no arquivo .env antes de continuar"
    exit 1
fi

# Carregar vari√°veis do .env
source .env

echo "üîç Verificando configura√ß√£o..."
echo "Wallet Address: ${WALLET_ADDRESS:-'N√ÉO CONFIGURADA'}"
echo "Nation Contract: ${NATION_NFT_CONTRACT:-'N√ÉO CONFIGURADA'}"
echo "Base RPC: ${BASE_RPC_URL:-'N√ÉO CONFIGURADA'}"
echo ""

# Fun√ß√£o para executar teste com feedback
run_test() {
    local test_name="$1"
    local env_vars="$2"
    local test_pattern="$3"
    
    echo "üß™ Executando: $test_name"
    echo "Comando: $env_vars go test ./test/integration/ -v -run \"$test_pattern\""
    echo ""
    
    eval "$env_vars go test ./test/integration/ -v -run \"$test_pattern\""
    
    if [ $? -eq 0 ]; then
        echo "‚úÖ $test_name - PASSOU"
    else
        echo "‚ùå $test_name - FALHOU"
    fi
    echo ""
}

# Executar diferentes tipos de testes
echo "üöÄ Iniciando execu√ß√£o dos testes..."
echo ""

# 1. Testes b√°sicos de integra√ß√£o
run_test "Testes B√°sicos de Integra√ß√£o" "INTEGRATION_TESTS=true" "TestNFTAccessIntegration"

# 2. Testes com contratos reais
run_test "Testes com Contratos Reais" "REAL_CONTRACT_TESTS=true" "TestNFTAccessManagerRealContract"

# 3. Testes espec√≠ficos Nation Pass
run_test "Testes Espec√≠ficos Nation Pass" "NATION_PASS_TESTS=true" "TestNationPassAccessValidation"

# 4. Testes de valida√ß√£o de startup
run_test "Testes de Valida√ß√£o de Startup" "STARTUP_VALIDATION_TESTS=true" "TestStartupValidationIntegration"

# 5. Testes de valida√ß√£o de tiers
run_test "Testes de Valida√ß√£o de Tiers" "TIER_VALIDATION_TESTS=true" "TestNationPassTierValidation"

# 6. Testes de fluxo completo
run_test "Testes de Fluxo Completo" "NATION_PASS_FLOW_TESTS=true" "TestNationPassIntegrationFlow"

# 7. Todos os testes juntos
echo "üéØ Executando TODOS os testes de integra√ß√£o..."
echo "Comando: INTEGRATION_TESTS=true REAL_CONTRACT_TESTS=true NATION_PASS_TESTS=true STARTUP_VALIDATION_TESTS=true TIER_VALIDATION_TESTS=true NATION_PASS_FLOW_TESTS=true go test ./test/integration/ -v"
echo ""

INTEGRATION_TESTS=true REAL_CONTRACT_TESTS=true NATION_PASS_TESTS=true STARTUP_VALIDATION_TESTS=true TIER_VALIDATION_TESTS=true NATION_PASS_FLOW_TESTS=true go test ./test/integration/ -v

if [ $? -eq 0 ]; then
    echo "üéâ TODOS OS TESTES PASSARAM!"
else
    echo "‚ùå Alguns testes falharam"
fi

echo ""
echo "üìä Resumo dos Testes Executados:"
echo "1. ‚úÖ Testes B√°sicos de Integra√ß√£o"
echo "2. ‚úÖ Testes com Contratos Reais"
echo "3. ‚úÖ Testes Espec√≠ficos Nation Pass"
echo "4. ‚úÖ Testes de Valida√ß√£o de Startup"
echo "5. ‚úÖ Testes de Valida√ß√£o de Tiers"
echo "6. ‚úÖ Testes de Fluxo Completo"
echo "7. ‚úÖ Todos os Testes Juntos"
echo ""
echo "üéØ Testes de integra√ß√£o NFT Access conclu√≠dos!"
echo "Estes testes validam efetivamente o acesso a NFTs Nation Pass"
echo "com wallets reais e contratos reais na Base Network."
